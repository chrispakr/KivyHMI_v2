<ScreenFilmAnimation>:
    FloatLayout:
        orientation: "vertical"
        Image:
            height: 160
            width: 530
            y: 0
            source: app.filmMoveAnimationBottomImgSource
        Image:
            height: 160
            width: 530
            y: 0
            source: app.filmMoveAnimationTopImgSource
            color: app.baseGreyLight
        DownHolder:
            center_x: root.width /2
            center_y: 178

<ScreenLoadFilmAnimation>:
    #on_enter: app.filmLoadAnimationPicPos = 0
    FloatLayout:
        orientation: "vertical"
        Image:
            height: 160
            width: 530
            y: 0
            source: app.filmLoadAnimationBottomImgSource
            allow_stretch: False
        Image:
            height: 160
            width: 530
            y: 0
            source: app.filmLoadAnimationTopImgSource
            allow_stretch: False
            color: app.baseGreyLight
        DownHolder:
            center_x: root.width /2
            center_y: 178


<ScreenSelectCameraType>:
    update: app.updateList
    BoxLayout:
        orientation: "horizontal"
        spacing: 10
        padding: 0,0,0,0
        BoxLayout:
            orientation: "vertical"
            spacing: 10
            size_hint_x: None
            width: 174
            padding: 10,0,0,0
            SelectFilmTypeButton:
                text: "negative"
                group: "posNeg"
                state: "down" if app.vs_selected_film_type == 0 else "normal"
                on_press: app.vs_selected_film_type_temp = 0
            SelectFilmTypeButton:
                text: "positive"
                group: "posNeg"
                state: "down" if app.vs_selected_film_type == 1 else "normal"
                on_press: app.vs_selected_film_type_temp = 1

        RecycleView:
            id: rvSelectCameraType
            viewclass: 'SelectCameraButton'
            RecycleGridLayout:
                #default_size: 90, 55
                default_size_hint: 1, 1
                #size_hint_y: None
                #height: self.minimum_height
                spacing: 10
                padding: 0,0,10,0
                rows: 3
                cols: 4


<ScreenSelectLedColor>:
    GridLayout:
        rows: 3
        cols: 1
        #minimum_height: 40
        BoxLayout:
            orientation: "horizontal"
            spacing: 10
            padding: 10,10,10,10
            size_hint_y: None
            height: 100
            ToggleButton:
                background_color: 0,0,0,0
                background_down: ""
                background_normal: ""
                group: "ledColor"
                state: "down" if app.curLedColor == 1 else "normal"
                on_press: app.setLedColor(1)
                canvas.before:
                    Color:
                        rgba: app.ledColorWhite
                        a: 0.5 if self.state == "normal" else 1.0
                    RoundedRectangle:
                        pos: self.x, self.y
                        size: self.width, self.height
                        radius: [8]

            ToggleButton:
                background_color: 0,0,0,0
                background_down: ""
                background_normal: ""
                group: "ledColor"
                on_press: app.setLedColor(2)
                state: "down" if app.curLedColor == 2 else "normal"
                canvas.before:
                    Color:
                        rgb: app.ledColorRed
                        a: 0.5 if self.state == "normal" else 1.0
                    RoundedRectangle:
                        pos: self.x, self.y
                        size: self.width, self.height
                        radius: [8]

            ToggleButton:
                background_color: 0,0,0,0
                background_down: ""
                background_normal: ""
                group: "ledColor"
                on_press: app.setLedColor(3)
                state: "down" if app.curLedColor == 3 else "normal"
                canvas.before:
                    Color:
                        rgb: app.ledColorGreen
                        a: 0.5 if self.state == "normal" else 1.0
                    RoundedRectangle:
                        pos: self.x, self.y
                        size: self.width, self.height
                        radius: [8]
            ToggleButton:
                background_color: 0,0,0,0
                background_down: ""
                background_normal: ""
                group: "ledColor"
                on_press: app.setLedColor(4)
                state: "down" if app.curLedColor == 4 else "normal"
                canvas.before:
                    Color:
                        rgb: app.ledColorBlue
                        a: 0.5 if self.state == "normal" else 1.0
                    RoundedRectangle:
                        pos: self.x, self.y
                        size: self.width, self.height
                        radius: [8]
        GridLayout:
            rows: 1
            cols: 3
            height: 90
            padding: 10,0,10,0
            Image:
                source: "pictures/icons/icon_slideSmall.png"
                size_hint_x: None
                width: 75
            Slider:
                id: sliderLedBrightness
                width: 500
                orientation: 'horizontal'
                color: app.baseColor
                min: 0
                max: 100
                step: 1
                value: app.set_ledBrightnessSlider
                on_value: app.setLedBrightness(self.value)
            Image:
                source: "pictures/icons/icon_sliderBig.png"
                size_hint_x: None
                allow_stretch: False
                width: 75

        BoxLayout:
            rows: 1
            cols: 2

            Label:
                font_name: "StdFont"
                font_size: 24
                markup: True
                color: app.baseGreyDark
                text: "BRIGHTNESS "
                size_hint_x: None
                width: 380
                text_size: self.size
                halign: 'right'
                valign: 'middle'
            Label:
                font_name: "StdFont"
                font_size: 24
                color: app.baseWhite
                halign: "right"
                multiline: True
                text: str(round(sliderLedBrightness.value)) + "%"
                #text: "%s" % sliderLedBrightness.value + "%"
                size_hint_x: None
                width: 70
                text_size: self.size
                halign: 'right'
                valign: 'middle'


